name: Deploy to Digital Ocean Droplet

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Cache Next.js build
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-
          
    - name: Install dependencies
      run: npm ci
    
    - name: Temporarily modify Babel config for build
      run: |
        if [ -f .babelrc ]; then mv .babelrc .babelrc.backup; fi
        if [ -f babel.config.js ]; then mv babel.config.js babel.config.js.backup; fi
    
    - name: Build
      run: npm run build

    - name: Restore Babel config
      run: |
        if [ -f .babelrc.backup ]; then mv .babelrc.backup .babelrc; fi
        if [ -f babel.config.js.backup ]; then mv babel.config.js.backup babel.config.js; fi

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '20'
    
  #   - name: Cache Node.js modules
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.npm
  #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #       restore-keys: |
  #         ${{ runner.os }}-node-
    
  #   - name: Cache Next.js build
  #     uses: actions/cache@v3
  #     with:
  #       path: |
  #         .next/cache
  #       key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
  #       restore-keys: |
  #         ${{ runner.os }}-nextjs-
    
  #   - name: Install dependencies
  #     run: npm ci
    
  #   - name: Run unit tests
  #     run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
        
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Deploy to Digital Ocean
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        source: "dist/"
        target: ${{ secrets.DO_TARGET_PATH }}